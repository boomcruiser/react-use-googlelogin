{"version":3,"file":"react-use-googlelogin.cjs.development.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/useExternalScript.ts","../src/constants.ts","../src/index.tsx"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { useEffect } from 'react'\n\n/**\n * Loads an internal script into a tag under the provided `id`. Useful for libraries\n * such as Stripe checkout and Google maps.\n * @private\n *\n * @param id - ID to give the created DOM node.\n * @param src - URL to load the script from.\n * @param callback - Callback to run when the script is loaded.\n */\nexport const useExternalScript = (\n  id: string,\n  src: string,\n  callback: () => void\n) => {\n  useEffect(() => {\n    const isLoaded = Boolean(document.getElementById(id))\n    if (isLoaded) return\n\n    const script = document.createElement('script')\n    script.src = src\n    script.id = id\n\n    document.body.appendChild(script)\n\n    if (callback) script.onload = callback\n    if (isLoaded && callback) callback()\n    // We're missing deps here, but we really only want to call this once.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n}\n","export const GOOGLE_API_URL = 'https://apis.google.com/js/api.js'\nexport const DOM_ID = '___GOOGLE_LOGIN___'\n","import { useState, useRef } from 'react'\n\nimport { useExternalScript } from './useExternalScript'\nimport { DOM_ID, GOOGLE_API_URL } from './constants'\nimport {\n  GoogleUser,\n  HookConfig,\n  HookState,\n  HookReturnValue,\n  TokenObj,\n} from './types'\n\nexport type GoogleLoginHookReturnValue = HookReturnValue\n\n/**\n * Retrieves basic profile information for a given user.\n * @private\n *\n * @param user - `GoogleUser` instance to get basic info on.\n */\nconst getAdditionalUserData = (\n  user: GoogleUser,\n  fetchBasicProfile: boolean\n) => {\n  const authResponse = user.getAuthResponse()\n\n  user.tokenObj = authResponse\n  user.tokenId = authResponse.id_token\n  user.accessToken = authResponse.access_token\n  user.expiresAt = authResponse.expires_at\n\n  if (!fetchBasicProfile) return\n\n  const basicProfile = user.getBasicProfile()\n\n  user.googleId = basicProfile.getId()\n  user.profileObj = {\n    googleId: basicProfile.getId(),\n    imageUrl: basicProfile.getImageUrl(),\n    email: basicProfile.getEmail(),\n    name: basicProfile.getName(),\n    givenName: basicProfile.getGivenName(),\n    familyName: basicProfile.getFamilyName(),\n  }\n}\n\n/**\n * React hook for working with the google oAuth client library.\n *\n * @param config - The configuration for your Google authentication flow.\n *\n * @returns The `GoogleUser` instance with properties to work with Google\n * client authentication.\n */\nexport const useGoogleLogin = ({\n  clientId,\n  hostedDomain,\n  redirectUri,\n  apiKey,\n  scope = 'profile email openid',\n  cookiePolicy = 'single_host_origin',\n  fetchBasicProfile = true,\n  uxMode = 'popup',\n  persist = true,\n}: HookConfig): HookReturnValue => {\n  if (!clientId) throw new Error('clientId is required.')\n\n  const [state, setState] = useState<HookState>({\n    googleUser: undefined,\n    auth2: undefined,\n    isSignedIn: false,\n    clientInitialized: false,\n    isInitialized: false,\n  })\n  const latestAccessTokenRef = useRef<string | undefined>(undefined)\n  const latestExpiresAtRef = useRef<number | undefined>(undefined)\n\n  /**\n   * Attempts to sign in a user with Google's oAuth2 client.\n   * @public\n   *\n   * @param options - Configutation parameters for GoogleAuth.signIn()\n   * @returns The GoogleUser instance for the signed in user.\n   */\n  const signIn = async (\n    options?: gapi.auth2.SigninOptions\n  ): Promise<GoogleUser | undefined> => {\n    const auth2 = window.gapi.auth2.getAuthInstance()\n\n    try {\n      const googleUser = await auth2.signIn(options)\n      getAdditionalUserData(googleUser, fetchBasicProfile)\n\n      return googleUser\n    } catch (err) {\n      if (__DEV__)\n        console.error('Received error when signing in: ' + err?.details)\n      return\n    }\n  }\n\n  /**\n   * Signs out and disconnects the oAuth2 client. Sets `googleUser` to undefined.\n   * @public\n   *\n   * @returns `true` if successful, `false` otherwise.\n   */\n  const signOut = async (): Promise<boolean> => {\n    const auth2 = window.gapi.auth2.getAuthInstance()\n\n    if (!auth2) return false\n\n    await auth2.signOut()\n    auth2.disconnect()\n\n    return true\n  }\n\n  /**\n   * Attempts to get permission from the user to access the specified `scopes` offline.\n   * If the user grants access, this function will return the `authorizationCode` that\n   * can be exchanged for a `refreshToken` on your own server or backend service.\n   * @public\n   *\n   * @remarks\n   * You must sign in a user with this function in order to retain access for longer\n   * than 1 hour.\n   *\n   * @param options - Configuration options for granting offline access.\n   * @returns The authorization `code` if permission was granted, `undefined` otherwise.\n   */\n  const grantOfflineAccess = async (\n    options?: gapi.auth2.OfflineAccessOptions\n  ): Promise<string | undefined> => {\n    const auth2 = window.gapi.auth2.getAuthInstance()\n\n    try {\n      const { code } = await auth2.grantOfflineAccess(options)\n\n      return code\n    } catch (err) {\n      if (__DEV__)\n        console.error(\n          'Received error when granting offline access: ' + err?.details\n        )\n      return\n    }\n  }\n\n  /**\n   * Refreshes the current logged in user's `accessToken`.\n   *\n   * @remarks\n   * To use this function, the user must have signed in via `grantOfflineAccess`.\n   *\n   * @returns An object containing the new `accessToken` and its corresponding\n   * `expiresAt`.\n   */\n  const refreshUser = async (): Promise<TokenObj | undefined> => {\n    try {\n      const auth2 = window.gapi.auth2.getAuthInstance()\n      const googleUser = auth2.currentUser.get()\n\n      const tokenObj = await googleUser?.reloadAuthResponse()\n      if (!tokenObj) {\n        if (__DEV__)\n          console.error('Something went wrong refreshing the current user.')\n\n        return\n      }\n\n      latestAccessTokenRef.current = tokenObj.access_token\n      latestExpiresAtRef.current = tokenObj.expires_at\n\n      return {\n        accessToken: tokenObj.access_token,\n        expiresAt: tokenObj.expires_at,\n      }\n    } catch (err) {\n      if (__DEV__)\n        console.error('Received error when refreshing tokens: ' + err?.details)\n      return\n    }\n  }\n\n  /**\n   * Callback function passed to Google's auth listener. This is the primary\n   * mechanism to keep the hook's state/return values in sync with Google's\n   * window `gapi` objects. All stateful logic **should** be performed in\n   * here.\n   * @private\n   *\n   * @remarks\n   * Due to the way closures work, we cannot access `state` directly\n   * in this function. (yay stale closures) Normally we'd instantiate and\n   * disconnect the listener on every render so we have the correct `state`\n   * values but Google doesn't provide a way to disconnect their listener. Go figure.\n   *\n   * This function **also** may not be called with the most up-to-date `GoogleUser`.\n   * Google decided that `reloadAuthResponse` will invoke this listener, but not\n   * actually provide a `googleUser` object with the most up-to-date tokens.\n   * In most auth change scenarios this isn't an issue except when refreshing\n   * with `refreshUser`.\n   *\n   * To remedy this, we need to keep a ref that tracks the latest `accessToken`\n   * and `expiresAt` values whenever we refresh, and use those instead when they're\n   * available since they'll contain the up-to-date values.\n   *\n   * It's worth noting that we could just use the callback version `setState` here,\n   * and update state in `refreshUser`, but this causes causes an additional re-render\n   * by setting state twice. React's batching **could* help here, but it is pretty\n   * un-deterministic and in my testing wouldn't kick in this particular case.\n   *\n   * @param googleUser GoogleUser object from the `currentUser` property.\n   */\n  var DISCOVERY_DOCS = [\n    'https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest',\n  ]\n\n  // Authorization scopes required by the API; multiple scopes can be\n  // included, separated by spaces.\n  // var SCOPES = 'https://www.googleapis.com/auth/calendar.events'\n\n  const initClient = () => {\n    gapi.client\n      .init({\n        apiKey,\n        // clientId,\n        discoveryDocs: DISCOVERY_DOCS,\n        // scope: SCOPES,\n      })\n      .then(\n        function() {\n          console.log('calendar init')\n          setState({ ...state, clientInitialized: true })\n        },\n        function(error) {\n          console.log({ error })\n          setState({ ...state, error })\n          // appendPre(JSON.stringify(error, null, 2))\n        }\n      )\n  }\n  const handleAuthChange = (googleUser: GoogleUser) => {\n    const isSignedIn = googleUser.isSignedIn()\n    const auth2 = window.gapi.auth2.getAuthInstance()\n\n    // If `tokenId` is present, we've already performed this step so skip it.\n    if (isSignedIn && !googleUser.tokenId)\n      getAdditionalUserData(googleUser, fetchBasicProfile)\n\n    setState({\n      ...state,\n      auth2,\n      googleUser: isSignedIn\n        ? {\n            ...googleUser,\n            accessToken: latestAccessTokenRef.current ?? googleUser.accessToken,\n            expiresAt: latestExpiresAtRef.current ?? googleUser.expiresAt,\n            tokenObj: {\n              ...(googleUser.tokenObj as gapi.auth2.AuthResponse),\n              access_token:\n                latestAccessTokenRef.current ??\n                googleUser.tokenObj!.access_token,\n              expires_at:\n                latestExpiresAtRef.current ?? googleUser.tokenObj!.expires_at,\n            },\n          }\n        : undefined,\n      isSignedIn,\n\n      isInitialized: true,\n    })\n  }\n\n  useExternalScript(DOM_ID, GOOGLE_API_URL, () => {\n    /**\n     * According to Google's documentation:\n     *\n     * Warning: do not call Promise.resolve() or similar with the result of gapi.auth2.init().\n     * The GoogleAuth object returned implements the `then()` method which resolves with itself.\n     * As a result, `Promise.resolve()` or `await` will cause infinite recursion.\n     */\n    const handleLoad = () => {\n      const config: gapi.auth2.ClientConfig = {\n        client_id: clientId,\n        cookie_policy: cookiePolicy,\n        hosted_domain: hostedDomain,\n        fetch_basic_profile: fetchBasicProfile,\n        ux_mode: uxMode,\n        redirect_uri: redirectUri,\n        scope,\n      }\n      window.gapi.auth2.init(config).then(\n        auth2 => {\n          const googleUser = auth2.currentUser.get()\n          const isSignedIn = googleUser.isSignedIn()\n          auth2.currentUser.listen(handleAuthChange)\n\n          if (!persist) {\n            signOut()\n            return\n          }\n\n          if (isSignedIn) {\n            getAdditionalUserData(googleUser, fetchBasicProfile)\n          }\n          setState({\n            ...state,\n            googleUser,\n            auth2,\n            isSignedIn,\n            isInitialized: true,\n          })\n          gapi.load('client:auth2', initClient)\n        },\n        (err: any) => {\n          setState({\n            ...state,\n            googleUser: undefined,\n            auth2: undefined,\n            isSignedIn: false,\n            isInitialized: false,\n            error: err,\n          })\n        }\n      )\n    }\n\n    window.gapi.load('auth2', handleLoad)\n  })\n\n  return {\n    ...state,\n    signIn,\n    signOut,\n    grantOfflineAccess,\n    refreshUser,\n  }\n}\n"],"names":["useExternalScript","id","src","callback","useEffect","isLoaded","Boolean","document","getElementById","script","createElement","body","appendChild","onload","GOOGLE_API_URL","DOM_ID","getAdditionalUserData","user","fetchBasicProfile","authResponse","getAuthResponse","tokenObj","tokenId","id_token","accessToken","access_token","expiresAt","expires_at","basicProfile","getBasicProfile","googleId","getId","profileObj","imageUrl","getImageUrl","email","getEmail","name","getName","givenName","getGivenName","familyName","getFamilyName","useGoogleLogin","clientId","hostedDomain","redirectUri","apiKey","scope","cookiePolicy","uxMode","persist","Error","useState","googleUser","undefined","auth2","isSignedIn","clientInitialized","isInitialized","state","setState","latestAccessTokenRef","useRef","latestExpiresAtRef","signIn","options","window","gapi","getAuthInstance","err","console","error","details","signOut","disconnect","grantOfflineAccess","code","refreshUser","currentUser","get","reloadAuthResponse","current","DISCOVERY_DOCS","initClient","client","init","discoveryDocs","then","log","handleAuthChange","handleLoad","config","client_id","cookie_policy","hosted_domain","fetch_basic_profile","ux_mode","redirect_uri","listen","load"],"mappings":"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"}